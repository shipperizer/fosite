// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ory/fosite (interfaces: DeviceAuthorizeResponder)

// Package internal is a generated GoMock package.
package internal

import (
	gomock "github.com/golang/mock/gomock"
)

// MockDeviceAuthorizeResponder is a mock of DeviceAuthorizeResponder interface.
type MockDeviceAuthorizeResponder struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceAuthorizeResponderMockRecorder
}

// MockDeviceAuthorizeResponderMockRecorder is the mock recorder for MockDeviceAuthorizeResponder.
type MockDeviceAuthorizeResponderMockRecorder struct {
	mock *MockDeviceAuthorizeResponder
}

// NewMockDeviceAuthorizeResponder creates a new mock instance.
func NewMockDeviceAuthorizeResponder(ctrl *gomock.Controller) *MockDeviceAuthorizeResponder {
	mock := &MockDeviceAuthorizeResponder{ctrl: ctrl}
	mock.recorder = &MockDeviceAuthorizeResponderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceAuthorizeResponder) EXPECT() *MockDeviceAuthorizeResponderMockRecorder {
	return m.recorder
}
