// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ory/fosite (interfaces: DeviceAuthorizeResponder)

// Package internal is a generated GoMock package.
package internal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeviceAuthorizeResponder is a mock of DeviceAuthorizeResponder interface.
type MockDeviceAuthorizeResponder struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceAuthorizeResponderMockRecorder
}

// MockDeviceAuthorizeResponderMockRecorder is the mock recorder for MockDeviceAuthorizeResponder.
type MockDeviceAuthorizeResponderMockRecorder struct {
	mock *MockDeviceAuthorizeResponder
}

// NewMockDeviceAuthorizeResponder creates a new mock instance.
func NewMockDeviceAuthorizeResponder(ctrl *gomock.Controller) *MockDeviceAuthorizeResponder {
	mock := &MockDeviceAuthorizeResponder{ctrl: ctrl}
	mock.recorder = &MockDeviceAuthorizeResponderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceAuthorizeResponder) EXPECT() *MockDeviceAuthorizeResponderMockRecorder {
	return m.recorder
}

// GetDeviceCode mocks base method.
func (m *MockDeviceAuthorizeResponder) GetDeviceCode() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceCode")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDeviceCode indicates an expected call of GetDeviceCode.
func (mr *MockDeviceAuthorizeResponderMockRecorder) GetDeviceCode() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceCode", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).GetDeviceCode))
}

// GetExpiresIn mocks base method.
func (m *MockDeviceAuthorizeResponder) GetExpiresIn() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExpiresIn")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetExpiresIn indicates an expected call of GetExpiresIn.
func (mr *MockDeviceAuthorizeResponderMockRecorder) GetExpiresIn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExpiresIn", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).GetExpiresIn))
}

// GetInterval mocks base method.
func (m *MockDeviceAuthorizeResponder) GetInterval() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterval")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetInterval indicates an expected call of GetInterval.
func (mr *MockDeviceAuthorizeResponderMockRecorder) GetInterval() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterval", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).GetInterval))
}

// GetUserCode mocks base method.
func (m *MockDeviceAuthorizeResponder) GetUserCode() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserCode")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserCode indicates an expected call of GetUserCode.
func (mr *MockDeviceAuthorizeResponderMockRecorder) GetUserCode() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserCode", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).GetUserCode))
}

// GetVerificationURI mocks base method.
func (m *MockDeviceAuthorizeResponder) GetVerificationURI() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerificationURI")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetVerificationURI indicates an expected call of GetVerificationURI.
func (mr *MockDeviceAuthorizeResponderMockRecorder) GetVerificationURI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerificationURI", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).GetVerificationURI))
}

// GetVerificationURIComplete mocks base method.
func (m *MockDeviceAuthorizeResponder) GetVerificationURIComplete() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerificationURIComplete")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetVerificationURIComplete indicates an expected call of GetVerificationURIComplete.
func (mr *MockDeviceAuthorizeResponderMockRecorder) GetVerificationURIComplete() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerificationURIComplete", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).GetVerificationURIComplete))
}

// SetDeviceCode mocks base method.
func (m *MockDeviceAuthorizeResponder) SetDeviceCode(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDeviceCode", arg0)
}

// SetDeviceCode indicates an expected call of SetDeviceCode.
func (mr *MockDeviceAuthorizeResponderMockRecorder) SetDeviceCode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDeviceCode", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).SetDeviceCode), arg0)
}

// SetExpiresIn mocks base method.
func (m *MockDeviceAuthorizeResponder) SetExpiresIn(arg0 int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetExpiresIn", arg0)
}

// SetExpiresIn indicates an expected call of SetExpiresIn.
func (mr *MockDeviceAuthorizeResponderMockRecorder) SetExpiresIn(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetExpiresIn", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).SetExpiresIn), arg0)
}

// SetInterval mocks base method.
func (m *MockDeviceAuthorizeResponder) SetInterval(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetInterval", arg0)
}

// SetInterval indicates an expected call of SetInterval.
func (mr *MockDeviceAuthorizeResponderMockRecorder) SetInterval(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetInterval", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).SetInterval), arg0)
}

// SetUserCode mocks base method.
func (m *MockDeviceAuthorizeResponder) SetUserCode(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetUserCode", arg0)
}

// SetUserCode indicates an expected call of SetUserCode.
func (mr *MockDeviceAuthorizeResponderMockRecorder) SetUserCode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUserCode", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).SetUserCode), arg0)
}

// SetVerificationURI mocks base method.
func (m *MockDeviceAuthorizeResponder) SetVerificationURI(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetVerificationURI", arg0)
}

// SetVerificationURI indicates an expected call of SetVerificationURI.
func (mr *MockDeviceAuthorizeResponderMockRecorder) SetVerificationURI(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetVerificationURI", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).SetVerificationURI), arg0)
}

// SetVerificationURIComplete mocks base method.
func (m *MockDeviceAuthorizeResponder) SetVerificationURIComplete(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetVerificationURIComplete", arg0)
}

// SetVerificationURIComplete indicates an expected call of SetVerificationURIComplete.
func (mr *MockDeviceAuthorizeResponderMockRecorder) SetVerificationURIComplete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetVerificationURIComplete", reflect.TypeOf((*MockDeviceAuthorizeResponder)(nil).SetVerificationURIComplete), arg0)
}
